{"ast":null,"code":"var _jsxFileName = \"D:\\\\Re_Evaluation\\\\ReEvaluation\\\\Source\\\\Source\\\\src\\\\components\\\\ProductsDashboard.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { getProductsReq, sortProducts, sortProductshigh } from \"../Redux/actions\"; // import { Navigate,useNavigate } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Products = () => {\n  _s();\n\n  // to get all products list on component mounts\n  const data = useSelector(state => state.products);\n  const dispatch = useDispatch(); // const [product, setProducts] = useState([]);\n  // const [query, setQuery] = useState(\"\");\n  // const navigate = useNavigate();\n\n  const [sort, setSort] = useState(\"\");\n  useEffect(() => {\n    //   dispatch an action to the store\n    // dont make call here\n    // handle it as thunk call in actions.js\n    // dispatch(getproductsData())\n    const getproductsData = () => {\n      axios.get(\"https://movie-fake-server.herokuapp.com/products\").then(_ref => {\n        let {\n          data\n        } = _ref;\n        console.log(data); // getProductsReq(data);\n\n        dispatch(getProductsReq(data));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    getproductsData();\n  }, []); //    sort by price\n\n  const handleSort = e => {\n    // dispach handle sort action to the store\n    if (e.target.value == \"asc\") {\n      dispatch(sortProducts());\n    } else if (e.target.value == \"desc\") {\n      dispatch(sortProductshigh());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSort,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"--sort by --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"asc\",\n        children: \"low to high\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"desc\",\n        children: \"high to low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-list\",\n      children: data && data.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [item.title, \"/ Rs:-\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"W9gjAiwwm9U2MsawGMMeGMV/YAs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["D:/Re_Evaluation/ReEvaluation/Source/Source/src/components/ProductsDashboard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getProductsReq","sortProducts","sortProductshigh","Products","data","state","products","dispatch","sort","setSort","getproductsData","get","then","console","log","catch","err","handleSort","e","target","value","map","item","image","title","price"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,gBAHF,QAIO,kBAJP,C,CAKA;;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAH4B,CAI5B;AACA;AACA;;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA,UAAMe,eAAe,GAAG,MAAM;AAC5BX,MAAAA,KAAK,CACFY,GADH,CACO,kDADP,EAEGC,IAFH,CAEQ,QAAc;AAAA,YAAb;AAAER,UAAAA;AAAF,SAAa;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EADkB,CAElB;;AACAG,QAAAA,QAAQ,CAACP,cAAc,CAACI,IAAD,CAAf,CAAR;AACD,OANH,EAOGW,KAPH,CAOUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OATH;AAUD,KAXD;;AAYAN,IAAAA,eAAe;AAChB,GAlBQ,EAkBN,EAlBM,CAAT,CAR4B,CA4B5B;;AACA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxB;AACA,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,KAAtB,EAA6B;AAC3Bb,MAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACD,KAFD,MAEO,IAAIiB,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkB,MAAtB,EAA8B;AACnCb,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEe,UAAlB;AAAA,8BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAEGb,IAAI,IACHA,IAAI,CAACiB,GAAL,CAAUC,IAAD,IAAU;AACjB,4BACE;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uBACGD,IAAI,CAACE,KADR,YACqBF,IAAI,CAACG,KAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD;AAHJ;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA6BD,CAnEM;;GAAMtB,Q;UAEEL,W,EACID,W;;;KAHNM,Q","sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  getProductsReq,\n  sortProducts,\n  sortProductshigh,\n} from \"../Redux/actions\";\n// import { Navigate,useNavigate } from \"react-router-dom\";\n\nexport const Products = () => {\n  // to get all products list on component mounts\n  const data = useSelector((state) => state.products);\n  const dispatch = useDispatch();\n  // const [product, setProducts] = useState([]);\n  // const [query, setQuery] = useState(\"\");\n  // const navigate = useNavigate();\n  const [sort, setSort] = useState(\"\");\n  useEffect(() => {\n    //   dispatch an action to the store\n    // dont make call here\n    // handle it as thunk call in actions.js\n    // dispatch(getproductsData())\n    const getproductsData = () => {\n      axios\n        .get(\"https://movie-fake-server.herokuapp.com/products\")\n        .then(({ data }) => {\n          console.log(data);\n          // getProductsReq(data);\n          dispatch(getProductsReq(data));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getproductsData();\n  }, []);\n\n  //    sort by price\n  const handleSort = (e) => {\n    // dispach handle sort action to the store\n    if (e.target.value == \"asc\") {\n      dispatch(sortProducts());\n    } else if (e.target.value == \"desc\") {\n      dispatch(sortProductshigh());\n    }\n  };\n\n  return (\n    <>\n      <h2>Products</h2>\n      <select onChange={handleSort}>\n        {/* {data.map(function (el, id) {\n          return (\n            <option key={id} value={el}>{el}</option>\n          )\n        })} */}\n        <option>--sort by --</option>\n        <option value=\"asc\">low to high</option>\n        <option value=\"desc\">high to low</option>\n      </select>\n      <div className=\"products-list\">\n        {/* map throught th products  list and display the results */}\n        {data &&\n          data.map((item) => {\n            return (\n              <div>\n                <img src={item.image} />\n                <h3>\n                  {item.title}/ Rs:-{item.price}\n                </h3>\n              </div>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}